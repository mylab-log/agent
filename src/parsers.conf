[MULTILINE_PARSER]
    name          net-multi
    type          regex
    flush_timeout 1000
    rule         "start_state"   "^(\S\[[\d]{1,2}m)+(trce|info|dbug|warn|fatal|fail|crit)(\S\[[\d]{1,2}m)+: [\w+\.\[\]]+\n$"  "cont"
    rule "cont" "^(?!(\S\[[\d]{1,2}m)+(trce|info|dbug|warn|fatal|fail|crit)(\S\[[\d]{1,2}m))" "cont"


[MULTILINE_PARSER]
    name          mylab-multi
    type          regex
    flush_timeout 1000
    rule         "start_state"   "^Message:\s"  "cont"
    rule "cont" "^^(?!Message:)" "cont"

[PARSER]
    name mylab-lvl-extract
    format regex
    regex ^\s+log[_/-]level: (?<level>debug|warning|error)

[PARSER]
    name mylab-msg-extract
    format regex
    regex ^Message:\s(?<message>[^\n$]+)

[PARSER]
    name mylab-trace-extract
    format regex
    regex ^\s+(trace\-id):\s(?<trace_id>[^\n$]+)

[PARSER]
    name net-lvl-extract
    format regex
    regex ^(\S\[[\d]{1,2}m)+(?<level_tag>dbug|warn|fatal|fail|crit)(\S\[[\d]{1,2}m)+:

[PARSER]
    name net-msg-extract
    format regex
    regex ^(\S\[[\d]{1,2}m)+(trce|info|dbug|warn|fatal|fail|crit)(\S\[[\d]{1,2}m)+: [\w+\.\[\]]+\n\s+(Message:\s)?(?<message>[^\n$]{1,128})

[PARSER]
    name nginx-lvl-extract
    format regex
    regex \[(?<level_tag>debug|warn|error|crit|alert|emerg)\]

[PARSER]
    name nginx-msg-extract
    format regex
    regex (?<message>\"[A-Z]{3,7} [^\s]+ (HTTP|HTTPS)\/[0-9\.]+\" [0-9]{3})

[PARSER]
    name nginx-msg-err-extract
    format regex
    regex (?<message>[\d+]\#[\d]+:\s[^\n]{1,128})

[PARSER]
    name single-str-msg-extract
    format regex
    regex (?<message>^[^\n]{1,128})
